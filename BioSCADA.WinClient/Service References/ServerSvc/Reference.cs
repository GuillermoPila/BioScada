//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioSCADA.WinClient.ServerSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerSvc.IClientWCFSvc", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IClientWCFSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecuritySvc/Login", ReplyAction="http://tempuri.org/ISecuritySvc/LoginResponse")]
        bool Login(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://tempuri.org/ISecuritySvc/Leave", ReplyAction="http://tempuri.org/ISecuritySvc/LeaveResponse")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IAdminWCFSvc/Start_Server", ReplyAction="http://tempuri.org/IAdminWCFSvc/Start_ServerResponse")]
        bool Start_Server();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IAdminWCFSvc/Stop_Server", ReplyAction="http://tempuri.org/IAdminWCFSvc/Stop_ServerResponse")]
        bool Stop_Server();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IClientWCFSvc/Start_Experiment", ReplyAction="http://tempuri.org/IClientWCFSvc/Start_ExperimentResponse")]
        bool Start_Experiment(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IClientWCFSvc/Stop_Experiment", ReplyAction="http://tempuri.org/IClientWCFSvc/Stop_ExperimentResponse")]
        bool Stop_Experiment(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IClientWCFSvc/GetVariableExperiment", ReplyAction="http://tempuri.org/IClientWCFSvc/GetVariableExperimentResponse")]
        System.Collections.Generic.Dictionary<int, double> GetVariableExperiment(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IClientWCFSvc/SetValueVariable", ReplyAction="http://tempuri.org/IClientWCFSvc/SetValueVariableResponse")]
        bool SetValueVariable(int VariableId, double VariableValue, string ExperimentName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientWCFSvcChannel : BioSCADA.WinClient.ServerSvc.IClientWCFSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientWCFSvcClient : System.ServiceModel.ClientBase<BioSCADA.WinClient.ServerSvc.IClientWCFSvc>, BioSCADA.WinClient.ServerSvc.IClientWCFSvc {
        
        public ClientWCFSvcClient() {
        }
        
        public ClientWCFSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientWCFSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWCFSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWCFSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string name, string pass) {
            return base.Channel.Login(name, pass);
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        public bool Start_Server() {
            return base.Channel.Start_Server();
        }
        
        public bool Stop_Server() {
            return base.Channel.Stop_Server();
        }
        
        public bool Start_Experiment(string name) {
            return base.Channel.Start_Experiment(name);
        }
        
        public bool Stop_Experiment(string name) {
            return base.Channel.Stop_Experiment(name);
        }
        
        public System.Collections.Generic.Dictionary<int, double> GetVariableExperiment(string name) {
            return base.Channel.GetVariableExperiment(name);
        }
        
        public bool SetValueVariable(int VariableId, double VariableValue, string ExperimentName) {
            return base.Channel.SetValueVariable(VariableId, VariableValue, ExperimentName);
        }
    }
}
